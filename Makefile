# Copyright 2015 The Blastify Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License. See the AUTHORS file for names of
# contributors.


# Uncomment exactly one of the lines labelled (A), (B), and (C) below
# to switch between compilation modes.

# A: Production use (full optimizations)
#OPT ?= -O3 -DNDEBUG

# B: Debug mode, with full line-level debugging symbols
OPT ?= -g2

# C: Profiling mode: optimizations, but w/debugging symbols
#OPT ?= -O3 -g2 -DNDEBUG

# TODO(tdial): Use for install target
PREFIX ?= /usr/local

# Warning Flags
WARNINGFLAGS = -Wall -Werror

# Run a script to generate SOURCES and set platform-specific options.
$(shell CXX="$(CXX)" ./build_config build_config.mk)

# Include the file generated by build_config
include build_config.mk

CXXFLAGS += -I. -I./include $(OPT) $(WARNINGFLAGS)

BLASTIFY_OBJS = $(BLASTIFY_SOURCES:.cc=.o)
BLASTIFYD_OBJS = $(BLASTIFYD_SOURCES:.cc=.o)
LIBBLASTIFY_OBJS = $(LIBBLASTIFY_SOURCES:.cc=.o)
TESTS = 

# Targets
all: blastify blastifyd libblastify.a

.PHONY:
check: $(TESTS)
	for t in $(TESTS); do echo "** Running $$t"; ./$$t || exit 1; done

.PHONY:
clean:
	-rm -f */*.o build_config.mk *.a blastify blastifyd libblastify.a

.PHONY:
count:
	wc -l $(CPPLINT_SOURCES)

# Blastify client
blastify: $(BLASTIFY_OBJS)
	$(CXX) $(CXXFLAGS) -o blastify $(BLASTIFY_OBJS) $(LIBRARIES)

# Blastify daemon
blastifyd: $(BLASTIFYD_OBJS)
	$(CXX) $(CXXFLAGS) -o blastifyd $(BLASTIFYD_OBJS) $(LIBRARIES)

# Blastify library
libblastify.a: $(LIBBLASTIFY_OBJS)
	ar rcs libblastify.a
	ranlib libblastify.a

# Lint check
.PHONY:
lint:
	$(LINT_TOOL) $(CPPLINT_SOURCES)

# Clean
.PHONY:
neat: clean
	-rm -f *~ .*~ */*~ ./include/blastify/*~ ./src/*~

# Reformat source code according to project standards
.PHONY:
reformat:
	clang-format -i $(CPPLINT_SOURCES)

# Tests

# Suffix Rules
.cc.o:
	$(CXX) $(CXXFLAGS) -c $< -o $@

